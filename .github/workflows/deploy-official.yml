name: deploy official

on:
  push:
    tags:
      - official-*

jobs:
  pipeline:
    name: deploy official
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from branch name
        id: extract_version
        run: |
          TAG_NAME="${{ github.ref }}"
          VERSION=$(echo $TAG_NAME | grep -oP '\b\d+\.\d+\.\d+\b')
          if [ -z "$VERSION" ]; then
            echo "No version found in the tag name: $TAG_NAME"
            exit 1  # 如果没有找到版本号，可以选择退出
          else
            echo "Version extracted from tag: $VERSION"
            echo "::set-output name=version::$VERSION"
      - uses: actions/checkout@v4
      - name: Setup git
        run: |-
          git config --local user.email github_bot@users.noreply.github.com
          git config --local user.name GithubBot
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.6
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: pnpm-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install deps
        env:
          HUSKY: 0
          SKIP_INSTALL_SIMPLE_GIT_HOOKS: 1
          SKIP_SIMPLE_GIT_HOOKS: 1
          NODE_ENV: production
        run: pnpm install --frozen-lockfile
      - name: Run custom commands
        env:
          NODE_ENV: production
        run: cd apps/official-client && npm run build
      - name: Build and push to docker
        uses: docker/build-push-action@v4
        with:
          context: apps/official-client
          push: true
          tags: |-
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE_NAME }}:${{ steps.extract_version.outputs.version }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE_NAME }}:latest
